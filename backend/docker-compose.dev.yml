version: '3.8'
services:
  mongodb:
    image: mongo:7.0
    container_name: munistream-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: munistream123
      MONGO_INITDB_DATABASE: munistream
    ports:
    - 27017:27017
    volumes:
    - mongodb_data:/data/db
    - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
    - munistream-network
    healthcheck:
      test:
      - CMD
      - mongosh
      - --eval
      - db.adminCommand('ping')
      interval: 30s
      timeout: 10s
      retries: 3
  redis:
    image: redis:7-alpine
    container_name: munistream-redis
    restart: unless-stopped
    ports:
    - 6379:6379
    volumes:
    - redis_data:/data
    networks:
    - munistream-network
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 30s
      timeout: 10s
      retries: 3
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: munistream-backend
    restart: unless-stopped
    environment:
      MONGODB_URL: mongodb://admin:munistream123@mongodb:27017/munistream?authSource=admin
      MONGODB_DB_NAME: munistream
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      REDIS_URL: redis://redis:6379
    ports:
    - 8000:8000
    volumes:
    - ./app:/app/app:ro
    - ./plugins.yaml:/app/plugins.yaml:ro
    - /Users/paw/Projects/Puente/puente-workflows:/Users/paw/Projects/Puente/puente-workflows:ro
    - upload_data:/app/uploads
    networks:
    - munistream-network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8000/health
      interval: 30s
      timeout: 10s
      retries: 3
  mongo-express:
    image: mongo-express:1.0.0
    container_name: munistream-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: munistream123
      ME_CONFIG_MONGODB_URL: mongodb://admin:munistream123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: munistream123
    ports:
    - 8081:8081
    networks:
    - munistream-network
    depends_on:
      mongodb:
        condition: service_healthy
    profiles:
    - admin
  nginx:
    image: nginx:alpine
    container_name: munistream-nginx
    restart: unless-stopped
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
    - munistream-network
    depends_on:
    - backend
    profiles:
    - production
  airflow-postgres:
    image: postgres:16
    container_name: airflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
    - airflow_pg_data:/var/lib/postgresql/data
    networks:
    - munistream-network
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U airflow -d airflow
      interval: 10s
      timeout: 5s
      retries: 5
  airflow-redis:
    image: redis:7
    container_name: airflow-redis
    restart: unless-stopped
    command:
    - redis-server
    - --appendonly
    - 'yes'
    volumes:
    - airflow_redis_data:/data
    networks:
    - munistream-network
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 10s
      timeout: 5s
      retries: 5
  airflow-init:
    image: apache/airflow:2.10.2
    container_name: airflow-init
    depends_on:
      airflow-postgres:
        condition: service_healthy
      airflow-redis:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-postgres:5432/airflow
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    user: ${AIRFLOW_UID:-50000}:0
    command:
    - bash
    - -c
    - airflow db migrate && airflow users create -r Admin -u $${_AIRFLOW_WWW_USER_USERNAME}
      -p $${_AIRFLOW_WWW_USER_PASSWORD} -e devops@local -f Admin -l User || true
    volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    networks:
    - munistream-network
    restart: 'no'
  airflow-scheduler:
    image: apache/airflow:2.10.2
    container_name: airflow-scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      airflow-postgres:
        condition: service_healthy
      airflow-redis:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-postgres:5432/airflow
    user: ${AIRFLOW_UID:-50000}:0
    command:
    - airflow
    - scheduler
    volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    networks:
    - munistream-network
    restart: unless-stopped
  airflow-webserver:
    image: apache/airflow:2.10.2
    container_name: airflow-webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      airflow-scheduler:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-postgres:5432/airflow
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'false'
      AIRFLOW__WEBSERVER__RBAC: 'true'
    user: ${AIRFLOW_UID:-50000}:0
    ports:
    - 8080:8080
    command:
    - airflow
    - webserver
    volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8080/health
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
    - munistream-network
    restart: unless-stopped
  airflow-flower:
    image: apache/airflow:2.10.2
    container_name: airflow-flower
    depends_on:
      airflow-redis:
        condition: service_healthy
      airflow-postgres:
        condition: service_healthy
      airflow-scheduler:
        condition: service_started
    environment:
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-postgres:5432/airflow
    user: ${AIRFLOW_UID:-50000}:0
    ports:
    - 5555:5555
    command:
    - airflow
    - celery
    - flower
    networks:
    - munistream-network
    restart: unless-stopped
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  upload_data:
    driver: local
  airflow_pg_data: null
  airflow_redis_data: null
  airflow_logs: null
networks:
  munistream-network:
    driver: bridge
