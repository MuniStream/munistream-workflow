name: Build and Push Backend

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'backend/**'
      - '.github/workflows/build-backend.yml'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: munistream/backend

jobs:
  build:
    name: Build and Push Backend Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        working-directory: backend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build for linux/amd64 platform (for EKS)
          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest

          # Push both tags
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          echo "Image pushed: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Image pushed: $ECR_REGISTRY/$ECR_REPOSITORY:latest"

      - name: Update deployment (optional)
        continue-on-error: true
        run: |
          # Optional: trigger deployment update
          # This could call a webhook or update k8s deployments
          echo "New backend image available: ${{ github.sha }}"